name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: Build All Packages
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build all packages
        run: npm run build

      - name: Check build artifacts
        run: |
          echo "Checking build outputs..."
          ls -la packages/*/dist/ || echo "Some packages may not have dist folders"

  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:          
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Type check core package
        run: npx tsc --noEmit --project packages/core/tsconfig.json

      - name: Type check shared package
        run: npx tsc --noEmit --project packages/shared/tsconfig.json

      - name: Type check web package
        run: npx tsc --noEmit --project packages/web/tsconfig.json

      - name: Type check electron package
        run: npx tsc --noEmit --project packages/electron/tsconfig.json

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for outdated packages
        run: npm outdated || true

  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [test, build, type-check, dependency-check]
    if: always()

    steps:
      - name: Check job results
        run: |
          echo "Test result: ${{ needs.test.result }}"
          echo "Build result: ${{ needs.build.result }}"
          echo "Type check result: ${{ needs.type-check.result }}"
          echo "Dependency check result: ${{ needs.dependency-check.result }}"
          
          if [[ "${{ needs.test.result }}" == "failure" || "${{ needs.build.result }}" == "failure" || "${{ needs.type-check.result }}" == "failure" ]]; then
            echo "CI pipeline failed!"
            exit 1
          else
            echo "CI pipeline passed successfully!"
          fi
